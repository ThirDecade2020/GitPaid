generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  githubId        String   @unique
  githubUsername  String
  name            String?
  token           String?
  bountiesClaimed Bounty[] @relation("DevBounties")
  bountiesCreated Bounty[] @relation("OwnerBounties")
  Wallet          Wallet[]
}

model Bounty {
  id                                   Int      @id @default(autoincrement())
  repoOwner                            String
  repoName                             String
  issueNumber                          Int
  amount                               Float
  currency                             String   @default("USD")
  status                               String
  escrowId                             String
  createdBy                            Int
  claimedBy                            Int?
  createdAt                            DateTime @default(now())
  updatedAt                            DateTime @updatedAt
  hunterWalletId                       Int?
  ownerWalletId                        Int?
  claimer                              User?    @relation("DevBounties", fields: [claimedBy], references: [id])
  owner                                User     @relation("OwnerBounties", fields: [createdBy], references: [id])
  HunterWalletIdToWallet Wallet?  @relation("HunterWalletIdToWallet", fields: [hunterWalletId], references: [id])
  OwnerWalletIdToWallet  Wallet?  @relation("OwnerWalletIdToWallet", fields: [ownerWalletId], references: [id])
}

model Wallet {
  id                                   Int      @id @default(autoincrement())
  userId                               Int
  walletName                           String
  publicKey                            String
  encryptedPrivateKey                  String
  iv                                   String
  isDefault                            Boolean  @default(false)
  createdAt                            DateTime @default(now())
  updatedAt                            DateTime
  HunterWalletIdToWallet               Bounty[] @relation("HunterWalletIdToWallet")
  OwnerWalletIdToWallet                Bounty[] @relation("OwnerWalletIdToWallet")
  User                                 User     @relation(fields: [userId], references: [id])
}
